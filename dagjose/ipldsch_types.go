package dagjose

// Code generated by go-ipld-prime gengo.  DO NOT EDIT.

import (
	"github.com/ipld/go-ipld-prime/datamodel"
)

var _ datamodel.Node = nil // suppress errors when this dependency is not referenced
// Type is a struct embeding a NodePrototype/Type for every Node implementation in this package.
// One of its major uses is to start the construction of a value.
// You can use it like this:
//
// 		dagjose.Type.YourTypeName.NewBuilder().BeginMap() //...
//
// and:
//
// 		dagjose.Type.OtherTypeName.NewBuilder().AssignString("x") // ...
//
var Type typeSlab

type typeSlab struct {
	JOSE             _JOSE__Prototype
	JOSE__Repr       _JOSE__ReprPrototype
	Map              _Map__Prototype
	Map__Repr        _Map__ReprPrototype
	Recipient        _Recipient__Prototype
	Recipient__Repr  _Recipient__ReprPrototype
	Recipients       _Recipients__Prototype
	Recipients__Repr _Recipients__ReprPrototype
	Signature        _Signature__Prototype
	Signature__Repr  _Signature__ReprPrototype
	Signatures       _Signatures__Prototype
	Signatures__Repr _Signatures__ReprPrototype
	String           _String__Prototype
	String__Repr     _String__ReprPrototype
}

// --- type definitions follow ---

// JOSE matches the IPLD Schema type "JOSE".  It has Struct type-kind, and may be interrogated like map kind.
type JOSE = *_JOSE
type _JOSE struct {
	aad         _String__Maybe
	ciphertext  _String__Maybe
	iv          _String__Maybe
	payload     _String__Maybe
	protected   _String__Maybe
	recipients  _Recipients__Maybe
	signatures  _Signatures__Maybe
	tag         _String__Maybe
	unprotected _Map__Maybe
}

// Map matches the IPLD Schema type "Map".  It has map kind.
type Map = *_Map
type _Map struct {
	m map[_String]*_String
	t []_Map__entry
}
type _Map__entry struct {
	k _String
	v _String
}

// Recipient matches the IPLD Schema type "Recipient".  It has Struct type-kind, and may be interrogated like map kind.
type Recipient = *_Recipient
type _Recipient struct {
	header        _Map__Maybe
	encrypted_key _String__Maybe
}

// Recipients matches the IPLD Schema type "Recipients".  It has list kind.
type Recipients = *_Recipients
type _Recipients struct {
	x []_Recipient
}

// Signature matches the IPLD Schema type "Signature".  It has Struct type-kind, and may be interrogated like map kind.
type Signature = *_Signature
type _Signature struct {
	header    _Map__Maybe
	protected _String__Maybe
	signature _String
}

// Signatures matches the IPLD Schema type "Signatures".  It has list kind.
type Signatures = *_Signatures
type _Signatures struct {
	x []_Signature
}

// String matches the IPLD Schema type "String".  It has string kind.
type String = *_String
type _String struct{ x string }
